"use strict";function _interopRequireDefault(r){return r&&r.__esModule?r:{"default":r}}function findDurationTagInString(r){if(void 0!==r){var n=r.match(/^<[^>]*>/)||[];if(!n.length)return!1;if(n.length>1)throw Error("multiple durations in a single str.",r);var e=n[0];return e.substr(1,e.length-2)}}function parseDurationTag(r){var n={};return _underscore2["default"].each(r.split(":"),function(e){var t=e.match(/[^0-9]+/gi);if(!t)throw new Error("missing duration unit for "+e+" in "+r);if(t.length>1)throw Error("invalid duration unit for "+e+". missing : separator?");t=t[0];var o=unitCodes[t];if(!o)throw new Error("unrecognized duration unit in: "+e+" - "+r);n[o]=parseInt(e.replace(t,""))}),n}Object.defineProperty(exports,"__esModule",{value:!0});var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol?"symbol":typeof r},_underscore=require("underscore"),_underscore2=_interopRequireDefault(_underscore),unitCodes={ms:"milliseconds",m:"minutes",s:"seconds",h:"hours",d:"days",w:"weeks",mo:"months",y:"years"},isValidDurationValue=function(r){if("string"!=typeof r&&"number"!=typeof r)return!1;if("string"==typeof r&&r.match(/[^\d]/))return!1;var n=parseInt(r,10);return isNaN(n)?!1:!(0>n)},normalizeDuration=function(r){if(!isValidDurationObject(r))throw new Error("normalizeDuration must be passed a valid duration object");return Object.keys(r).forEach(function(n){r[n]=parseInt(r[n],10)}),r},isValidDurationObject=function(r){return"object"!==("undefined"==typeof r?"undefined":_typeof(r))?!1:Object.keys(r).every(function(n){return"minutes"!==n&&"hours"!==n&&"seconds"!==n?!1:!!isValidDurationValue(r[n])})},secondsToDuration=function(r){if("number"!=typeof r)throw new Error("secondsToDuration must be passed an integer");if(0>r)throw new Error("secondsToDuration only accepts positive integers");var n={},e=void 0,t=void 0,o=void 0,i=void 0;return e=r%60,r/=60,t=Math.floor(r)%60,r/=60,o=Math.floor(r)%24,r/=24,i=Math.floor(r),e&&(n.seconds=e),t&&(n.minutes=t),o&&(n.hours=o),i&&(n.days=i),n},durationToSeconds=function(r){var n=0;return r.hours&&(n+=3600*r.hours),r.minutes&&(n+=60*r.minutes),r.seconds&&(n+=r.seconds),n},getDurationFromTag=function(r){var n=findDurationTagInString(r);return n?parseDurationTag(n):void 0},getTagFromDuration=function(r){var n=[];return _underscore2["default"].each(r,function(r,e){n.push(r+_underscore2["default"].invert(unitCodes)[e])}),"<"+n.join(":")+">"},getDisplayString=function(r){var n=void 0;n="number"==typeof r?secondsToDuration(r):r;var e=[],t=["hours","minutes","seconds"];return _underscore2["default"].each(n,function(r,n){if(!_underscore2["default"].contains(t,n))throw new Error("invalid duration unit")}),n.hours&&e.push(n.hours+"h"),n.minutes&&e.push(n.minutes+"m"),n.seconds&&e.push(n.seconds+"s"),e.join(":")},estimateDurationsFromString=function(r){var n=r.split(" ");n=_underscore2["default"].map(n,function(r){return r.replace(/[\.\,\(\)]/g,"")});var e={seconds:["second","seconds"],minutes:["minute","minutes"],hours:["hour","hours"],days:["day","days"]},t=[];return _underscore2["default"].each(n,function(r,o){if(r.match(/[0-9]+/g)||"a"===r||"an"===r){var i={};_underscore2["default"].each(e,function(e,t){_underscore2["default"].indexOf(e,n[o+1])>-1?i[t]=parseInt(r,10)||1:_underscore2["default"].indexOf(e,n[o+2])>-1?i[t]=parseInt(r,10)||1:_underscore2["default"].indexOf(e,n[o+3])>-1&&(i[t]=parseInt(r,10)||1)}),Object.keys(i).length&&t.push(i)}}),t};exports["default"]={isValidDurationValue:isValidDurationValue,isValidDurationObject:isValidDurationObject,getDurationFromTag:getDurationFromTag,getTagFromDuration:getTagFromDuration,getDisplayString:getDisplayString,estimateDurationsFromString:estimateDurationsFromString,durationToSeconds:durationToSeconds,secondsToDuration:secondsToDuration,normalizeDuration:normalizeDuration};